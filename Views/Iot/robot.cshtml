@using UiIoT.Services
@using Microsoft.AspNetCore.SignalR.Client
@inject Buffer<Point> buffer
@{
    ViewData["Title"] = "sd";
    var labels = buffer.Select(x => x.Label);
    var data = buffer.Select(x => x.Value);
    var connection = new HubConnectionBuilder()
            .WithUrl("iot/robot")
            .Build();
    async Task ss()
    {
        connection.On<int>("randomNumbers", (int r) =>
        {
            
        });
    }
}
@functions{
    
}

<div class="container">

    <div class="row">
        <div class="col-sm-4">
            <div class="overflow-auto">
                <ul class="list-group list-group-flush" style="border: 1px solid black">
                    @*
                     SignalR поток 
                    *@
                </ul>
            </div>
        </div>
        <div  style="padding-left:20px">
            <h2>Robot Form</h2>
                <form id="robot_form">
                
                    <div class="form-group row ">
                    <a>Текст</a>
                        <div class="col-sm" style="padding:4px">
                            <label for="exampleFormControlInput1">X</label>
                            <input type="number" class="form-control" id="exampleFormControlInput1">
                            <label for="exampleFormControlInput1">Y</label>
                            <input type="number" class="form-control col-1" id="exampleFormControlInput1">
                            <label for="exampleFormControlInput1">Z</label>
                            <input type="number" class="form-control col-1" id="exampleFormControlInput1">
                        </div>
                    <div class="col-sm" style="padding:4px">
                        <a>Текст</a>
                        <div style="padding:4px">
                           
                            @for (int i = 1; i < 7; i++)
                            {
                                <label for="exampleFormControlInput1" style="padding-top:5%">L @i</label>
                                <input type="number" class="form-control col-1" id="exampleFormControlInput1">

                            }


                        </div>

                        </div>
                    <div class="col-sm" style="padding:4px">
                        <a>Текст</a>
                        <div style="padding:4px">
                            
                            @for (int i = 1; i < 7; i++)
                                            {
                                <label for="exampleFormControlInput1" style="padding-top:5%">M @i</label>
                                <input type="number" class="form-control col-1" id="exampleFormControlInput1">

                            }
                           
                            
                        </div>

                    </div>
                    </div>
                </form>
            <button>Отправить</button>
            
        

                    
                    
            
            <h2>Camera</h2>
            <form>
                <div class="form-group">
                    <div style="padding:4px">
                        <label for="exampleFormControlInput1" style="padding-top:5%">T</label>
                        <input type="number" class="form-control col-1" id="exampleFormControlInput1" >
                        <label for="exampleFormControlInput1">G</label>
                        <input type="number" class="form-control col-1" id="exampleFormControlInput1" >
                        <label for="exampleFormControlInput1">V</label>
                        <input type="number" class="form-control col-1" id="exampleFormControlInput1" >
                    </div>




                </div>
            </form>
            <button>Отправить</button>
        </div >
        <div class="col-sm-4">
            <div style="width: 400px; height: 400px">
                <canvas id="myChart" width="400" height="400"></canvas>
            </div>
            <script id="data" type="application/json">
                @Json.Serialize(
                    new
                    {
                        labels,
                        limit = buffer.MaxCapacity.GetValueOrDefault(10),
                        url = "/iot"+"/robots",
                        datasets = new object[]
                        {
                            new
                            {
                                label = "SignalR Dataset",
                                data,
                                fill = false,
                                borderColor = "rgb(75, 192, 192)",
                                tension = 0.1
                            }
                        }
                    })
            </script>
        </div>

    </div>
    <script type="module" src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script type="module" src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script defer src="~/js/robot.js" type="module"></script>
</div>


